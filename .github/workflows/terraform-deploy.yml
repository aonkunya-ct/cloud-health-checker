name: Terraform Deploy

on:
  # üí° ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 'Go Build' ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
  workflow_run:
    workflows: ["Go Build and Archive"]
    types: 
      - completed
    # ‚ö†Ô∏è ‡∏£‡∏±‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ Build ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    branches:
      - main

env:
  # üéØ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Environment Variables ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö AWS Provider
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    # ‚ö†Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Go Build ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Lambda Artifact
        uses: actions/github-script@v6
        with:
          script: |
            # üí° ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå Zip ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å Build Workflow
            core.info('Downloading artifacts...')
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });
            const match = artifacts.data.artifacts.find(artifact => artifact.name === 'lambda-package');
            if (match) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: match.id,
                archive_format: 'zip',
              });
              const fs = require('fs');
              
              const AdmZip = require('adm-zip');

              fs.writeFileSync('lambda-package.zip', Buffer.from(download.data));
              const zip = new AdmZip('lambda-package.zip');
              zip.extractAllTo('.', true); 
              core.info('Artifact downloaded and extracted.');
            } else {
              core.setFailed('Lambda package artifact not found.');
            }
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        # ‚ö†Ô∏è ‡∏£‡∏±‡∏ô Apply ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (Production Best Practice ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ Manual Approval)
        run: terraform apply -auto-approve