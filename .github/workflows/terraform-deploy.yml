name: Terraform Deploy

on:
  workflow_run:
    workflows: ["Go Build and Archive"]
    types:
      - completed
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Lambda Artifact
        uses: actions/github-script@v6
        with:
          script: |
            // üí° ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå Zip ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å Build Workflow
            core.info('Downloading artifacts...')
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });
            const match = artifacts.data.artifacts.find(artifact => artifact.name === 'lambda-package');
            if (match) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: match.id,
                archive_format: 'zip',
              });
              const fs = require('fs');
              
              # --- üéØ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (‡∏à‡∏≤‡∏Å constAdmZip ‡πÄ‡∏õ‡πá‡∏ô const AdmZip) ---
              const AdmZip = require('adm-zip');

              fs.writeFileSync('lambda-package.zip', Buffer.from(download.data));
              const zip = new AdmZip('lambda-package.zip');
              zip.extractAllTo('.', true);
              core.info('Artifact downloaded and extracted.');
            } else {
              core.setFailed('Lambda package artifact not found.');
            }

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
